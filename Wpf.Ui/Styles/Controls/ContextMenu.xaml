<!--
    This Source Code Form is subject to the terms of the MIT License.
    If a copy of the MIT was not distributed with this file, You can obtain one at https://opensource.org/licenses/MIT.
    Copyright (C) Leszek Pomianowski and WPF UI Contributors.
    All Rights Reserved.
-->

<ResourceDictionary
    x:Class="Wpf.Ui.Styles.Controls.ContextMenu"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    x:ClassModifier="public">

    <Style x:Key="UiContextMenu" TargetType="{x:Type ContextMenu}">
        <Setter Property="TextElement.FontFamily" Value="{DynamicResource DFontFamily}" />
        <Setter Property="TextElement.Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource SystemFillColorSolidNeutralBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MenuBorderColorDefaultBrush}" />
        <Setter Property="MinWidth" Value="140" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HasDropShadow" Value="False" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="Popup.PopupAnimation" Value="Slide" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border
                        x:Name="Border"
                        Padding="0,3,0,3"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="8">
                        <StackPanel
                            ClipToBounds="True"
                            IsItemsHost="True"
                            KeyboardNavigation.DirectionalNavigation="Cycle"
                            Orientation="Vertical" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOpen" Value="True">
                            <!--  Animate  -->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource UiContextMenu}" TargetType="{x:Type ContextMenu}" />

</ResourceDictionary>
