<!--
    This Source Code Form is subject to the terms of the MIT License.
    If a copy of the MIT was not distributed with this file, You can obtain one at https://opensource.org/licenses/MIT.
    Copyright (C) Leszek Pomianowski and WPF UI Contributors.
    All Rights Reserved.
    
    Based on Microsoft XAML for Win UI
    Copyright (c) Microsoft Corporation. All Rights Reserved.
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Wpf.Ui.Controls"
    xmlns:system="clr-namespace:System;assembly=System.Runtime">

    <Thickness x:Key="TextBoxBorderThemeThickness">1,1,1,0</Thickness>
    <Thickness x:Key="TextBoxAccentBorderThemeThickness">0,0,0,1</Thickness>
    <Thickness x:Key="TextBoxLeftIconMargin">10,8,0,0</Thickness>
    <Thickness x:Key="TextBoxRightIconMargin">0,8,10,0</Thickness>
    <Thickness x:Key="TextBoxClearButtonMargin">0,5,4,0</Thickness>
    <Thickness x:Key="TextBoxClearButtonPadding">0,0,0,0</Thickness>
    <system:Double x:Key="TextBoxClearButtonHeight">24</system:Double>
    <system:Double x:Key="TextBoxClearButtonIconSize">14</system:Double>

    <!--  TODO: Rework TextBox ScrollViewer  -->
    <Style x:Key="DefaultTextBoxScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <ScrollContentPresenter Margin="0" CanContentScroll="{TemplateBinding CanContentScroll}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultTextBoxStyle" TargetType="{x:Type TextBox}">
        <!--  Universal WPF UI focus  -->
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <!--  Universal WPF UI focus  -->
        <!--  Universal WPF UI ContextMenu  -->
        <Setter Property="ContextMenu" Value="{DynamicResource DefaultControlContextMenu}" />
        <!--  Universal WPF UI ContextMenu  -->
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
            </Setter.Value>
        </Setter>
        <Setter Property="CaretBrush">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ControlFillColorDefault}" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource TextBoxBorderThemeThickness}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="MinHeight" Value="{DynamicResource TextControlThemeMinHeight}" />
        <Setter Property="MinWidth" Value="{DynamicResource TextControlThemeMinWidth}" />
        <Setter Property="Padding" Value="{DynamicResource TextControlThemePadding}" />
        <Setter Property="Border.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Border
                            x:Name="ContentBorder"
                            MinWidth="{TemplateBinding MinWidth}"
                            MinHeight="{TemplateBinding MinHeight}"
                            Padding="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}">
                            <Grid
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ScrollViewer
                                    x:Name="PART_ContentHost"
                                    VerticalAlignment="Center"
                                    CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                    HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                    IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                    IsTabStop="{TemplateBinding ScrollViewer.IsTabStop}"
                                    Style="{StaticResource DefaultTextBoxScrollViewerStyle}"
                                    TextElement.Foreground="{TemplateBinding Foreground}"
                                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />
                            </Grid>
                        </Border>
                        <!--  The Accent Border is a separate element so that changes to the border thickness do not affect the position of the element  -->
                        <Border
                            x:Name="AccentBorder"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            BorderThickness="{StaticResource TextBoxAccentBorderThemeThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource ControlStrongStrokeColorDefault}" />
                            </Border.BorderBrush>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="AccentBorder" Property="BorderThickness" Value="0,0,0,2" />
                            <Setter TargetName="AccentBorder" Property="BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource SystemAccentColorSecondary}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ContentBorder" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource ControlFillColorInputActive}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentBorder" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource ControlFillColorSecondary}" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Cursor" Value="IBeam" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource ControlFillColorDisabledBrush}" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
                            <Setter TargetName="AccentBorder" Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultUiTextBoxStyle" TargetType="{x:Type controls:TextBox}">
        <!--  Universal WPF UI focus  -->
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <!--  Universal WPF UI focus  -->
        <!--  Universal WPF UI ContextMenu  -->
        <Setter Property="ContextMenu" Value="{DynamicResource DefaultControlContextMenu}" />
        <!--  Universal WPF UI ContextMenu  -->
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
            </Setter.Value>
        </Setter>
        <Setter Property="IconForeground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
            </Setter.Value>
        </Setter>
        <Setter Property="CaretBrush">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ControlFillColorDefault}" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource TextBoxBorderThemeThickness}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="MinHeight" Value="{DynamicResource TextControlThemeMinHeight}" />
        <Setter Property="MinWidth" Value="{DynamicResource TextControlThemeMinWidth}" />
        <Setter Property="Padding" Value="{DynamicResource TextControlThemePadding}" />
        <Setter Property="Border.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="ClearButtonEnabled" Value="True" />
        <Setter Property="Icon" Value="Empty" />
        <Setter Property="IconFilled" Value="False" />
        <Setter Property="IconPlacement" Value="Left" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TextBox}">
                    <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Border
                            x:Name="ContentBorder"
                            MinWidth="{TemplateBinding MinWidth}"
                            MinHeight="{TemplateBinding MinHeight}"
                            Padding="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}">
                            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <controls:SymbolIcon
                                    x:Name="ControlIconLeft"
                                    Grid.Column="0"
                                    Margin="{StaticResource TextBoxLeftIconMargin}"
                                    Padding="0"
                                    VerticalAlignment="Top"
                                    Filled="{TemplateBinding IconFilled}"
                                    Foreground="{TemplateBinding IconForeground}"
                                    Symbol="{TemplateBinding Icon}" />
                                <Grid Grid.Column="1" Margin="{TemplateBinding Padding}">
                                    <ScrollViewer
                                        x:Name="PART_ContentHost"
                                        VerticalAlignment="Center"
                                        CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                        IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                        IsTabStop="{TemplateBinding ScrollViewer.IsTabStop}"
                                        Style="{StaticResource DefaultTextBoxScrollViewerStyle}"
                                        TextElement.Foreground="{TemplateBinding Foreground}"
                                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />
                                    <TextBlock
                                        x:Name="PlaceholderTextBox"
                                        Margin="0"
                                        Padding="1,0"
                                        VerticalAlignment="Top"
                                        Text="{TemplateBinding PlaceholderText}">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="{DynamicResource TextPlaceholderColor}" />
                                        </TextBlock.Foreground>
                                    </TextBlock>
                                </Grid>
                                <!--  Buttons and Icons have no padding from the main element to allow absolute positions if height is larger than the text entry zone  -->
                                <controls:Button
                                    x:Name="ClearButton"
                                    Grid.Column="2"
                                    Width="{StaticResource TextBoxClearButtonHeight}"
                                    Height="{StaticResource TextBoxClearButtonHeight}"
                                    Margin="{StaticResource TextBoxClearButtonMargin}"
                                    Padding="{StaticResource TextBoxClearButtonPadding}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Top"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Appearance="Secondary"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Command="{Binding Path=TemplateButtonCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    CommandParameter="clear"
                                    Cursor="Arrow"
                                    FontSize="{StaticResource TextBoxClearButtonIconSize}"
                                    Icon="Dismiss24">
                                    <controls:Button.Foreground>
                                        <SolidColorBrush Color="{DynamicResource TextFillColorTertiary}" />
                                    </controls:Button.Foreground>
                                </controls:Button>
                                <controls:SymbolIcon
                                    x:Name="ControlIconRight"
                                    Grid.Column="3"
                                    Margin="{StaticResource TextBoxRightIconMargin}"
                                    Padding="0"
                                    VerticalAlignment="Top"
                                    Filled="{TemplateBinding IconFilled}"
                                    Foreground="{TemplateBinding IconForeground}"
                                    Symbol="{TemplateBinding Icon}" />
                            </Grid>
                        </Border>
                        <!--  The Accent Border is a separate element so that changes to the border thickness do not affect the position of the element  -->
                        <Border
                            x:Name="AccentBorder"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            BorderThickness="{StaticResource TextBoxAccentBorderThemeThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource ControlStrongStrokeColorDefault}" />
                            </Border.BorderBrush>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="PlaceholderEnabled" Value="False">
                            <Setter TargetName="PlaceholderTextBox" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ShowClearButton" Value="False">
                            <Setter TargetName="ClearButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ClearButton" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="ClearButtonEnabled" Value="False">
                            <Setter TargetName="ClearButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ClearButton" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="IconPlacement" Value="Left">
                            <Setter TargetName="ControlIconRight" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ControlIconRight" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="IconPlacement" Value="Right">
                            <Setter TargetName="ControlIconLeft" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ControlIconLeft" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="Icon" Value="Empty">
                            <Setter TargetName="ControlIconRight" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ControlIconRight" Property="Margin" Value="0" />
                            <Setter TargetName="ControlIconLeft" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ControlIconLeft" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="AccentBorder" Property="BorderThickness" Value="0,0,0,2" />
                            <Setter TargetName="AccentBorder" Property="BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource SystemAccentColorSecondary}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ContentBorder" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource ControlFillColorInputActive}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentBorder" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource ControlFillColorSecondary}" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Cursor" Value="IBeam" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource ControlFillColorDisabledBrush}" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
                            <Setter TargetName="AccentBorder" Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
                            <Setter TargetName="ControlIconLeft" Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                            <Setter TargetName="ControlIconRight" Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                            <Setter TargetName="PlaceholderTextBox" Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                            <Setter Property="ClearButtonEnabled" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultTextBoxStyle}" TargetType="{x:Type TextBox}" />
    <Style BasedOn="{StaticResource DefaultUiTextBoxStyle}" TargetType="{x:Type controls:TextBox}" />

</ResourceDictionary>
