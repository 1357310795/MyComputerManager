<!--
    This Source Code Form is subject to the terms of the MIT License.
    If a copy of the MIT was not distributed with this file, You can obtain one at https://opensource.org/licenses/MIT.
    Copyright (C) Leszek Pomianowski and WPF UI Contributors.
    All Rights Reserved.
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Wpf.Ui.Controls">

    <!--
        SingleBorderWindow preserves the animations and scaling properly.
        By default, the navigation buttons will be hidden by the background.
        If we use Mica, we hide them manually.
    -->
    <Style x:Key="DefaultChromeWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ApplicationBackgroundColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="600" />
        <Setter Property="MinHeight" Value="320" />
        <Setter Property="Width" Value="1100" />
        <Setter Property="MinWidth" Value="460" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="WindowStyle" Value="SingleBorderWindow" />
        <Setter Property="AllowsTransparency" Value="False" />
        <Setter Property="ResizeMode" Value="CanResize" />
        <!--  The Display option casues a large aliasing effect  -->
        <!-- <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" /> -->
        <!--  I don't know if this is always the case, but ClearType blurs the fonts a bit for me  -->
        <!--<Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />-->
        <Setter Property="RenderOptions.BitmapScalingMode" Value="Linear" />
        <!--  Aliased breaks rounded control elements such as buttons  -->
        <Setter Property="RenderOptions.EdgeMode" Value="Unspecified" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <!--
                    CaptionHeight removes the white block at the top of the application window.
                    GlassFrameThickness must be at least -1, otherwise the transparency for Mica will not work.
                -->
                <WindowChrome
                    CaptionHeight="1"
                    CornerRadius="0"
                    GlassFrameThickness="-1"
                    NonClientFrameEdges="None"
                    ResizeBorderThickness="4"
                    UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <AdornerDecorator>
                        <controls:ClientAreaBorder
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="ContentPresenter" />
                        </controls:ClientAreaBorder>
                    </AdornerDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowState" Value="Normal">
                <Setter Property="ResizeMode" Value="CanResize" />
            </Trigger>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter Property="ResizeMode" Value="NoResize" />
                <Setter Property="Topmost" Value="False" />
                <Setter Property="WindowChrome.WindowChrome">
                    <Setter.Value>
                        <!--
                            1. ResizeBorderThickness should be set to 0 so that the mouse can get reach the title bar buttons
                            even if the mouse is at the end 1-pixel line of the screen.
                            2. On Windows 10, the CornerRadius should be set to 0 when the Window is maximized.
                        -->
                        <WindowChrome
                            CaptionHeight="1"
                            CornerRadius="0"
                            GlassFrameThickness="-1"
                            NonClientFrameEdges="None"
                            ResizeBorderThickness="0"
                            UseAeroCaptionButtons="False" />
                    </Setter.Value>
                </Setter>
                <!-- <Setter Property="MaxHeight" Value="{Binding Source={x:Static SystemParameters.WorkArea}, Path=PrimaryScreenHeight}" /> -->
                <!-- <Setter Property="MaxWidth" Value="{Binding Source={x:Static SystemParameters.WorkArea}, Path=Width}" /> -->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="NoResizeChromeWindowStyle"
        BasedOn="{StaticResource DefaultChromeWindowStyle}"
        TargetType="{x:Type Window}">
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    CaptionHeight="1"
                    CornerRadius="0"
                    GlassFrameThickness="-1"
                    NonClientFrameEdges="None"
                    ResizeBorderThickness="0"
                    UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowState" Value="Normal">
                <Setter Property="ResizeMode" Value="NoResize" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--
        This version is only if you want rounded corners on Windows 10.
    -->
    <Style
        x:Key="RoundedChromeWindowStyle"
        BasedOn="{StaticResource DefaultChromeWindowStyle}"
        TargetType="{x:Type Window}">
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    CaptionHeight="1"
                    CornerRadius="13"
                    GlassFrameThickness="-1"
                    NonClientFrameEdges="None"
                    ResizeBorderThickness="8"
                    UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--  OBSOLETE  -->
    <Style
        x:Key="UiWindow"
        BasedOn="{StaticResource DefaultChromeWindowStyle}"
        TargetType="{x:Type Window}" />
    <Style
        x:Key="UiWindowNoResize"
        BasedOn="{StaticResource NoResizeChromeWindowStyle}"
        TargetType="{x:Type Window}" />
    <Style
        x:Key="UiWindowRounded"
        BasedOn="{StaticResource RoundedChromeWindowStyle}"
        TargetType="{x:Type Window}" />

</ResourceDictionary>
